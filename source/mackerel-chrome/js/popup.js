// Generated by CoffeeScript 1.6.2
(function() {
  Q.longStackSupport = true;

  this.appModule = angular.module("appModule", ['ui', 'ngResource', 'restangular'], function($routeProvider, $locationProvider) {
    return $routeProvider.when("/", {
      templateUrl: "templates/stickers.html",
      controller: 'AppCntl'
    }).when("/intro", {
      templateUrl: "templates/intro.html",
      controller: 'IntroCntl'
    }).when("/login", {
      templateUrl: "templates/authentication.html",
      controller: 'AuthenticationCntl'
    }).when("/login/oauth", {
      templateUrl: "templates/oauth.html",
      controller: 'AuthenticationCntl'
    }).when("/logout", {
      templateUrl: "templates/authentication.html",
      controller: 'AuthenticationCntl'
    }).when("/stickers", {
      templateUrl: "templates/stickers.html",
      controller: 'StickersCntl'
    }).when("/stickers/:name", {
      templateUrl: "templates/stickers.html",
      controller: 'StickersCntl'
    }).otherwise({
      redirectTo: "/"
    });
  }).config(function($compileProvider) {
    return $compileProvider.urlSanitizationWhitelist(/^\s*(https?|chrome-extension):/);
  });

  this.AppCntl = function($scope, $location, $log, $rootScope, globalsSvc, userPrefs, runtime) {
    if (userPrefs.needsIntro()) {
      $location.path("/intro");
      return;
    }
    return Q.fcall(function() {
      /*    
          externalResource = $location.path().externalResource()
          if externalResource
            location.href = externalResource
            return
      */
      return globalsSvc.doit();
    }).then(function() {
      if ($rootScope.authentication.loggedIn) {
        $location.path("/stickers");
      } else {
        $location.path("/login");
      }
      return $rootScope.$apply();
    }).fail(function(e) {
      if (e.errorType === 'authentication') {
        $location.path("/login");
        return $rootScope.$apply();
      }
    }).done();
  };

  this.appModule.controller('IntroCntl', function($scope, $log, $location, $resource, userPrefs) {
    var _this = this;

    $scope.$root.shouldHideMenu = true;
    $scope.contentSequence = [
      {
        number: 1,
        imgUrl: function() {
          return "assets/intro-" + this.number + ".png";
        },
        text: 'content to go here.',
        subtext: 'if you need detailed explanation, use this.'
      }, {
        number: 2,
        imgUrl: function() {
          return "assets/intro-" + this.number + ".png";
        },
        text: 'content 2 to go here.',
        subtext: 'if you need detailed explanation, use this.'
      }
    ];
    $scope.contentSequence = $resource('assets/intro.json').query(function() {
      $log.info({
        msg: 'fetched intro content',
        obj: $scope.contentSequence
      });
      return $scope.refreshContent();
    });
    $scope.currentSequenceNumber = 0;
    $scope.refreshContent = function() {
      return $scope.content = $scope.contentSequence[$scope.currentSequenceNumber];
    };
    $scope.updateButtonVisibility = function() {
      $scope.showNext = $scope.currentSequenceNumber !== $scope.contentSequence.length - 1;
      return $scope.showPrevious = $scope.currentSequenceNumber !== 0;
    };
    $scope.next = function() {
      $log.info("next");
      $scope.currentSequenceNumber += 1;
      $scope.updateButtonVisibility();
      return $scope.refreshContent();
    };
    $scope.previous = function() {
      $log.info("previous");
      $scope.currentSequenceNumber -= 1;
      $scope.updateButtonVisibility();
      return $scope.refreshContent();
    };
    $scope.finishIntro = function() {
      userPrefs.setFinishedIntro();
      $scope.$root.shouldHideMenu = false;
      return $location.path('/');
    };
    $scope.updateButtonVisibility();
    return $scope.refreshContent();
  });

}).call(this);
