---
title: Tag Yeti
subtitle: some subtitle

sections:
- 
  role: title
  title: Tag Yeti
  subtitle: Placeholder subtitle.
  img: img/tagyeti/main_image-02.png  # TODO no text in the image
-
  role: actions
  sections:
  - role: download
    title: Download at the Chrome Web Store.
    href: chromestore-url
    img: img/ChromeWebStore206x58.png
-
  role: graphical-intro
  sections:
    - role: intro-scene
      title: Create stickers for different topics.
      img: img/tagyeti/intro-01.png
    - role: intro-scene
      title: Organize web pages with stickers as you browse.
      img: img/tagyeti/intro-02.png
    - role: intro-scene
      title: Your stickers sync with your Evernote account, so you can always find what you need.
      img: img/tagyeti/intro-03.png
- 
  role: marketing-summary
  title: Stub marketing message.
  img: img/tagyeti/marketing.png
-
  role: marketing-video
  embed: '<object width="420" height="315"><param name="movie" value="//www.youtube.com/v/ym1M2b3j_qU?version=3&amp;hl=en_GB&amp;rel=0"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="//www.youtube.com/v/ym1M2b3j_qU?version=3&amp;hl=en_GB&amp;rel=0" type="application/x-shockwave-flash" width="420" height="315" allowscriptaccess="always" allowfullscreen="true"></embed></object>'

# TODO features
---

:ruby

  # NOTE could use tag helpers instead. http://middlemanapp.com/helpers/#toc_3
  def el_if_present( data, role, html_el = role)
    content = data[role]

    if data[role]
      attrs = case html_el
      when :img
        content = ''
        { src: data[:img] }
      when :subimg
        content = ''
        html_el = :img
        { src: data[:subimg] }
      else
        {}
      end
      el html_el, content, role, attrs
    end
  end

  def el( type, content, role, attr_map = {})
    classname = role.to_s.strip.downcase.gsub(' ', '-')  # TODO special chars
    attrs = attr_map.map do |k, v|
      k.to_s + '="' + v.to_s + '"'
    end .join ' ' 

    "<#{type} class='#{classname}' #{attrs}>#{content}</#{type}>"
  end

  

- current_page.data.sections.each do |elem|
  %section( class="#{elem[:role]}" )

    = el_if_present elem, :title, :h2

    = el_if_present elem, :img

    = el_if_present elem, :subtitle, :p

    = el_if_present elem, :subimg

    - if elem[:embed]
      = elem[:embed]

    -# TODO blurb

    - if elem[:sections]
      - elem[:sections].each do |section|
        -# TODO make recursive.

        %section 
          = el_if_present section, :title, :p

          = el_if_present section, :img

          = el_if_present section, :subtitle, :p

          = el_if_present section, :subimg



-# TODO stylesheet entries to hide redundant elements.

-# TODO blurbs



