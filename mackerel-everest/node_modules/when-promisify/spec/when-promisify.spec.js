var promisify = require('../when-promisify.js')
describe("promisify(callback)", function( done ) {
  it("should promisify a node-style callback function with context", function( done) {
    var context = {
      proxy : function( cb ) { cb() },
      func  : function( cb ) { this.proxy(cb) }
    }
    var promisifiedFunc = promisify(context, 'func')
    promisifiedFunc().then( done )
  });
  it("should promisify a node-style callback function with context (testing error)", function( done) {
    var context = {
      proxy : function( cb ) { cb({error: 'oops'}) },
      func  : function( cb ) { this.proxy(cb) }
    }
    var promisifiedFunc = promisify(context, 'func')
    promisifiedFunc().then( null, function() { done() } )
  });
});

describe("promisify(context, methodName)", function( done ) {
  it("should promisify a node-style callback function with context", function( done) {
    var context = {
      proxy : function( cb ) { cb() },
      func  : function( cb ) { this.proxy(cb) }
    }
    var promisifiedFunc = promisify(context, 'func')
    promisifiedFunc().then( done )
  });
  it("should promisify a node-style callback function with context (testing error)", function( done) {
    var context = {
      proxy : function( cb ) { cb({error: 'oops'}) },
      func  : function( cb ) { this.proxy(cb) }
    }
    var promisifiedFunc = promisify(context, 'func')
    promisifiedFunc().then( null, function() { done() } )
  });
});